{"version":3,"sources":["components/Home/Home.tsx","components/Navbar/Navbar.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/TableRow/TableRow.tsx","components/PeopleTable/PeopleTable.tsx","components/People/People.tsx","App.tsx","index.tsx"],"names":["Home","className","Navbar","role","isActive","cn","to","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","TableRow","person","selectedPersonId","slug","sex","name","born","died","mother","father","motherName","fatherName","PeopleTable","React","memo","useParams","personId","useState","people","setPeople","isLoading","setIsLoading","error","setError","noPeopleMessage","useMemo","peopleLoadingError","useEffect","data","length","catch","finally","peopleWithParents","map","find","parent","People","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.551c8611.chunk.js","sourcesContent":["export const Home = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ninterface Props {\n  person: Person\n  selectedPersonId: string\n}\n\nexport const TableRow: React.FC<Props> = ({ person, selectedPersonId }) => {\n  const {\n    slug,\n    sex,\n    name,\n    born,\n    died,\n    mother,\n    father,\n    motherName,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={cn(\n        { 'has-background-warning': person.slug === selectedPersonId },\n      )}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={cn(\n            { 'has-text-danger': sex === 'f' },\n            { 'has-text-info': sex === 'm' },\n          )}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {\n          mother ? (\n            <Link\n              to={`/people/${mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {motherName}\n            </Link>\n          ) : (\n            motherName || '-'\n          )\n        }\n      </td>\n      <td>\n        {\n          father ? (\n            <Link\n              to={`/people/${father.slug}`}\n              className=\"has-text-info\"\n            >\n              {fatherName}\n            </Link>\n          ) : (\n            fatherName || '-'\n          )\n        }\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { TableRow } from '../TableRow';\n\nexport const PeopleTable = React.memo(() => {\n  const { personId = '' } = useParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<JSX.Element | null>(null);\n\n  const noPeopleMessage = useMemo(() => (\n    <p data-cy=\"noPeopleMessage\">\n      There are no people on the server\n    </p>\n  ), []);\n\n  const peopleLoadingError = useMemo(() => (\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      Something went wrong\n    </p>\n  ), []);\n\n  useEffect(() => {\n    getPeople()\n      .then(data => {\n        if (data.length === 0) {\n          setError(noPeopleMessage);\n        }\n\n        return data;\n      })\n      .then(setPeople)\n      .catch(() => {\n        setError(peopleLoadingError);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const peopleWithParents = useMemo(() => people.map(\n    person => ({\n      ...person,\n      father: people.find(\n        parent => person?.fatherName === parent.name || null,\n      ),\n      mother: people.find(\n        parent => person?.motherName === parent.name || null,\n      ),\n    }),\n  ), [people]);\n\n  return (\n    <div className=\"block\">\n      {\n        error\n      }\n      {\n        isLoading\n          ? <Loader />\n          : (\n            <div className=\"box table-container\">\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {\n                    peopleWithParents.map(person => <TableRow key={person.slug} person={person} selectedPersonId={personId} />)\n                  }\n                </tbody>\n              </table>\n            </div>\n          )\n      }\n    </div>\n  );\n});\n","import { PeopleTable } from '../PeopleTable';\n\nexport const People = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable />\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Home } from './components/Home';\nimport { Navbar } from './components/Navbar';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { People } from './components/People';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<People />} />\n          <Route path=\"/people/:personId\" element={<People />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}